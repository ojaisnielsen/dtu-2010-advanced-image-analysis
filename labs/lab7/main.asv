nFrames=10; Draw=1;
[x,y,P,Lines]=Film(nFrames,Draw);

%% 8-point algo

cFrame1 = 1;
cFrame2 = 5;

B = [x(cFrame2,:)' .* x(cFrame1,:)', x(cFrame2,:)' .* y(cFrame1,:)', x(cFrame2,:)', y(cFrame2,:)' .* x(cFrame1,:)', y(cFrame2,:)' .* y(cFrame1,:)', y(cFrame2,:)', x(cFrame1,:)', y(cFrame1,:)', ones(size(x(cFrame2,:)'))];  

[V, D] = eig(B'*B);
[v, i]=sort(diag(D));
F = reshape(V(:, i(1,1)), 3, 3);

%% Ransac
nItt = 50;
data = RanLine(10,15);
thres = 1;

data = [data; ones(1, size(data, 2))];
plot(data(1,:), data(2,:), 's')
hold on

converged = false;
maxScore=0;
best=[];
for i=1:nItt,
    perm = randperm(size(data, 2));
    m = ones(3);
    m(1:3,1:2) = data(:,perm(1:2));
    l = (m'\[0;0;1])';
    inliers = (abs(l*data)/norm(l) <= thres);
    if (sum(inliers) > maxScore),
        maxScore = sum(inliers);
        best = data(:, inliers);
    end
end

l = polyfit(best(1,:), best(2,:), 1);
x=[floor(min(data(1,:))), ceil(max(data(1,:)))];
plot(x,polyval(l,x))

%% 3d inference

image = imread('petergade.png');
imagesc(image)

% Q = [0, 6.7+1.98+3.96+0.76, 0, 6.7+1.98+3.96+0.76, 0, 6.7+1.98+3.96+0.76, 0, 6.7+1.98+3.96+0.76, 0, 6.7+1.98+3.96+0.769;
%     0, 0, 0.46, 0.46, 0.46+(5.18/2), 0.46+(5.18/2), 0.46+5.18, 0.46+5.18, 6.1, 6.1;
%     ones(1, 10)];
Q = [0, 6.7+1.98+3.96+0.76, 0, 6.7+1.98+3.96+0.76;
    0, 0, 6.1, 6.1];

Q = [100 * Q; ones(1, size(Q,2))];


[Px,Py] = ginput(size(Q,2));

%%

P = [Px'; Py'; ones(1, size(Q,2))];

Pn = P;
Qn = Q;
[Pn,Tp] = normalize(P);
[Qn,Tq] = normalize(Q);

% Qn = inv(Tq) * Qn

M = [];
for i=1:size(P,2),
    M = [M; [zeros(1,3), -Qn(3,i)*(Pn(:,i)'), Qn(2,i)*(Pn(:,i)')]; [Qn(3,i)*(Pn(:,i)'), zeros(1,3), -Qn(1,i)*(Pn(:,i)')]; [-Qn(2,i)*(Pn(:,i)'), Qn(1,i)*(Pn(:,i)'), zeros(1,3)]];
end

[V, D] = eig(M'*M);
[v, i] = sort(diag(D));
% H = Tq * reshape(V(:, i(1,1)), 3, 3);
H = inv(Tq) * reshape(V(:, i(1,1)), 3, 3) * Tp
H = H/H(3,3)

% Q
% Qev = H'*P;
% Qev = Qev ./ (ones(3,1)*Qev(3,:))

figure
Tr=maketform('projective', H');
WarpIm=imtransform(image,Tr,'YData',[0 Q(2,3)],'XData',[0 Q(1,2)]);
imagesc(WarpIm)